// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Event Bus creation 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters10951f532a2ffd11210d117e7695ffccd17a1de302f447a3afb56aeaa4fafd77ArtifactHash663F231F": Object {
      "Description": "Artifact hash for asset \\"10951f532a2ffd11210d117e7695ffccd17a1de302f447a3afb56aeaa4fafd77\\"",
      "Type": "String",
    },
    "AssetParameters10951f532a2ffd11210d117e7695ffccd17a1de302f447a3afb56aeaa4fafd77S3Bucket49F85C5B": Object {
      "Description": "S3 bucket for asset \\"10951f532a2ffd11210d117e7695ffccd17a1de302f447a3afb56aeaa4fafd77\\"",
      "Type": "String",
    },
    "AssetParameters10951f532a2ffd11210d117e7695ffccd17a1de302f447a3afb56aeaa4fafd77S3VersionKeyD2DB33B7": Object {
      "Description": "S3 key for asset version \\"10951f532a2ffd11210d117e7695ffccd17a1de302f447a3afb56aeaa4fafd77\\"",
      "Type": "String",
    },
    "AssetParameterse07e44b9103e9af8c6282586d9fa69dba161d5554149cbafee7c2183363efc6fArtifactHash12BCB84D": Object {
      "Description": "Artifact hash for asset \\"e07e44b9103e9af8c6282586d9fa69dba161d5554149cbafee7c2183363efc6f\\"",
      "Type": "String",
    },
    "AssetParameterse07e44b9103e9af8c6282586d9fa69dba161d5554149cbafee7c2183363efc6fS3Bucket0A7E5D48": Object {
      "Description": "S3 bucket for asset \\"e07e44b9103e9af8c6282586d9fa69dba161d5554149cbafee7c2183363efc6f\\"",
      "Type": "String",
    },
    "AssetParameterse07e44b9103e9af8c6282586d9fa69dba161d5554149cbafee7c2183363efc6fS3VersionKeyD977F770": Object {
      "Description": "S3 key for asset version \\"e07e44b9103e9af8c6282586d9fa69dba161d5554149cbafee7c2183363efc6f\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "IngestionFeedConsumerInferenceStreamToWF047D9AA3": Object {
      "Properties": Object {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "IngestionFeedConsumerLambdaFunction936A0C8F": Object {
      "DependsOn": Array [
        "IngestionFeedConsumerLambdaFunctionServiceRoleDefaultPolicy4D65D426",
        "IngestionFeedConsumerLambdaFunctionServiceRoleA17A92CA",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters10951f532a2ffd11210d117e7695ffccd17a1de302f447a3afb56aeaa4fafd77S3Bucket49F85C5B",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters10951f532a2ffd11210d117e7695ffccd17a1de302f447a3afb56aeaa4fafd77S3VersionKeyD2DB33B7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters10951f532a2ffd11210d117e7695ffccd17a1de302f447a3afb56aeaa4fafd77S3VersionKeyD2DB33B7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "WORKFLOW_ARN": "stateMachineArn",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IngestionFeedConsumerLambdaFunctionServiceRoleA17A92CA",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "IngestionFeedConsumerLambdaFunctionKinesisEventSourceIngestionFeedConsumerInferenceStreamToWFFB09A6ADAAC17EF8": Object {
      "Properties": Object {
        "BatchSize": 10,
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "IngestionFeedConsumerInferenceStreamToWF047D9AA3",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "IngestionFeedConsumerLambdaFunction936A0C8F",
        },
        "StartingPosition": "TRIM_HORIZON",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "IngestionFeedConsumerLambdaFunctionServiceRoleA17A92CA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IngestionFeedConsumerLambdaFunctionServiceRoleDefaultPolicy4D65D426": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerInferenceStreamToWF047D9AA3",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "kinesis:DescribeStream",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerInferenceStreamToWF047D9AA3",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": "stateMachineArn",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IngestionFeedConsumerLambdaFunctionServiceRoleDefaultPolicy4D65D426",
        "Roles": Array [
          Object {
            "Ref": "IngestionFeedConsumerLambdaFunctionServiceRoleA17A92CA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IngestionFeedProducerConstructLambdaDDBDynamoTable52EB3FCC": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "ACCOUNT_IDENTIFIER",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "CREATED_TIMESTAMP",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "ACCOUNT_IDENTIFIER",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "CREATED_TIMESTAMP",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": Object {
          "SSEEnabled": true,
        },
        "TimeToLiveSpecification": Object {
          "AttributeName": "EXP_DATE",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "IngestionFeedProducerConstructLambdaDDBLambdaFunctionADC081FB": Object {
      "DependsOn": Array [
        "IngestionFeedProducerConstructLambdaDDBLambdaFunctionServiceRoleDefaultPolicy1206E2B8",
        "IngestionFeedProducerConstructLambdaDDBLambdaFunctionServiceRole17CBC38F",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameterse07e44b9103e9af8c6282586d9fa69dba161d5554149cbafee7c2183363efc6fS3Bucket0A7E5D48",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse07e44b9103e9af8c6282586d9fa69dba161d5554149cbafee7c2183363efc6fS3VersionKeyD977F770",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse07e44b9103e9af8c6282586d9fa69dba161d5554149cbafee7c2183363efc6fS3VersionKeyD977F770",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "CAP_NUM_RECORD": "25",
            "CREDENTIAL_KEY_PATH": "/some/dummy/path/test",
            "DDB_TABLE_NAME": Object {
              "Ref": "IngestionFeedProducerConstructLambdaDDBDynamoTable52EB3FCC",
            },
            "QUERY_PARAM": "Health",
            "SOLUTION_NAME": "test-solution",
            "STACK_NAME": Object {
              "Ref": "AWS::StackName",
            },
            "STREAM_NAME": Object {
              "Ref": "IngestionFeedConsumerInferenceStreamToWF047D9AA3",
            },
            "SUPPORTED_LANG": "de,en,es,it,pt,fr,ja,ko,hi,ar,zh-cn,zh-tw",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IngestionFeedProducerConstructLambdaDDBLambdaFunctionServiceRole17CBC38F",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "IngestionFeedProducerConstructLambdaDDBLambdaFunctionAllowEventRuleIngestionFeedProducerConstructPollFrequencyA0B6F1DB122EF73C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "IngestionFeedProducerConstructLambdaDDBLambdaFunctionADC081FB",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "IngestionFeedProducerConstructPollFrequency5D26B899",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IngestionFeedProducerConstructLambdaDDBLambdaFunctionServiceRole17CBC38F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IngestionFeedProducerConstructLambdaDDBLambdaFunctionServiceRoleDefaultPolicy1206E2B8": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IngestionFeedProducerConstructLambdaDDBDynamoTable52EB3FCC",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerInferenceStreamToWF047D9AA3",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/some/dummy/path/test",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IngestionFeedProducerConstructLambdaDDBLambdaFunctionServiceRoleDefaultPolicy1206E2B8",
        "Roles": Array [
          Object {
            "Ref": "IngestionFeedProducerConstructLambdaDDBLambdaFunctionServiceRole17CBC38F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IngestionFeedProducerConstructPollFrequency5D26B899": Object {
      "Properties": Object {
        "ScheduleExpression": "(0/2 * * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "IngestionFeedProducerConstructLambdaDDBLambdaFunctionADC081FB",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
  },
}
`;
