// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Event Bus creation 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters2533c82a5af83cead90eb68bbe30eafe0aab42301846295f77dc4f6011b9ff99ArtifactHashF26D0C90": Object {
      "Description": "Artifact hash for asset \\"2533c82a5af83cead90eb68bbe30eafe0aab42301846295f77dc4f6011b9ff99\\"",
      "Type": "String",
    },
    "AssetParameters2533c82a5af83cead90eb68bbe30eafe0aab42301846295f77dc4f6011b9ff99S3Bucket6CD088D3": Object {
      "Description": "S3 bucket for asset \\"2533c82a5af83cead90eb68bbe30eafe0aab42301846295f77dc4f6011b9ff99\\"",
      "Type": "String",
    },
    "AssetParameters2533c82a5af83cead90eb68bbe30eafe0aab42301846295f77dc4f6011b9ff99S3VersionKey90770F96": Object {
      "Description": "S3 key for asset version \\"2533c82a5af83cead90eb68bbe30eafe0aab42301846295f77dc4f6011b9ff99\\"",
      "Type": "String",
    },
    "AssetParameters28cc63ca49ab1c9776cdd7794f42eb3f0d0f9c2c3c0f6cf5bb1243b2a62d992fArtifactHashA0AD976E": Object {
      "Description": "Artifact hash for asset \\"28cc63ca49ab1c9776cdd7794f42eb3f0d0f9c2c3c0f6cf5bb1243b2a62d992f\\"",
      "Type": "String",
    },
    "AssetParameters28cc63ca49ab1c9776cdd7794f42eb3f0d0f9c2c3c0f6cf5bb1243b2a62d992fS3BucketD992FB4D": Object {
      "Description": "S3 bucket for asset \\"28cc63ca49ab1c9776cdd7794f42eb3f0d0f9c2c3c0f6cf5bb1243b2a62d992f\\"",
      "Type": "String",
    },
    "AssetParameters28cc63ca49ab1c9776cdd7794f42eb3f0d0f9c2c3c0f6cf5bb1243b2a62d992fS3VersionKey995B9840": Object {
      "Description": "S3 key for asset version \\"28cc63ca49ab1c9776cdd7794f42eb3f0d0f9c2c3c0f6cf5bb1243b2a62d992f\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644": Object {
      "Properties": Object {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "IngestionFeedConsumerIngestionStreamKinesisStreamGetRecordsIteratorAgeAlarmE6C16601": Object {
      "Properties": Object {
        "AlarmDescription": "Consumer Record Processing Falling Behind, there is risk for data loss due to record expiration.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "GetRecords.IteratorAgeMilliseconds",
        "Namespace": "AWS/Kinesis",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 2592000,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "IngestionFeedConsumerIngestionStreamKinesisStreamReadProvisionedThroughputExceededAlarm821B53BC": Object {
      "Properties": Object {
        "AlarmDescription": "Consumer Application is Reading at a Slower Rate Than Expected.",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "ReadProvisionedThroughputExceeded",
        "Namespace": "AWS/Kinesis",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunction81C67CF2": Object {
      "DependsOn": Array [
        "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRoleDefaultPolicy93536D6D",
        "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters28cc63ca49ab1c9776cdd7794f42eb3f0d0f9c2c3c0f6cf5bb1243b2a62d992fS3BucketD992FB4D",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters28cc63ca49ab1c9776cdd7794f42eb3f0d0f9c2c3c0f6cf5bb1243b2a62d992fS3VersionKey995B9840",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters28cc63ca49ab1c9776cdd7794f42eb3f0d0f9c2c3c0f6cf5bb1243b2a62d992fS3VersionKey995B9840",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunctionKinesisEventSourceIngestionFeedConsumerIngestionStreamKinesisStreamD87284BD48D72474": Object {
      "Properties": Object {
        "BatchSize": 5,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": Object {
          "OnFailure": Object {
            "Destination": Object {
              "Fn::GetAtt": Array [
                "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7",
                "Arn",
              ],
            },
          },
        },
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "IngestionFeedConsumerIngestionStreamLambdaFunction81C67CF2",
        },
        "MaximumRecordAgeInSeconds": 86400,
        "StartingPosition": "TRIM_HORIZON",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRoleDefaultPolicy93536D6D": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "kinesis:DescribeStream",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRoleDefaultPolicy93536D6D",
        "Roles": Array [
          Object {
            "Ref": "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7": Object {
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
    },
    "IngestionFeedConsumerIngestionStreamSqsDlqQueuePolicy74C5C73B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "IngestionFeedProducerConstructLambdaDDBDynamoTable52EB3FCC": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "ACCOUNT_IDENTIFIER",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "CREATED_TIMESTAMP",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "ACCOUNT_IDENTIFIER",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "CREATED_TIMESTAMP",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": Object {
          "SSEEnabled": true,
        },
        "TimeToLiveSpecification": Object {
          "AttributeName": "EXP_DATE",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "IngestionFeedProducerConstructLambdaDDBLambdaFunctionADC081FB": Object {
      "DependsOn": Array [
        "IngestionFeedProducerConstructLambdaDDBLambdaFunctionServiceRoleDefaultPolicy1206E2B8",
        "IngestionFeedProducerConstructLambdaDDBLambdaFunctionServiceRole17CBC38F",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters2533c82a5af83cead90eb68bbe30eafe0aab42301846295f77dc4f6011b9ff99S3Bucket6CD088D3",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters2533c82a5af83cead90eb68bbe30eafe0aab42301846295f77dc4f6011b9ff99S3VersionKey90770F96",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters2533c82a5af83cead90eb68bbe30eafe0aab42301846295f77dc4f6011b9ff99S3VersionKey90770F96",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "CAP_NUM_RECORD": "25",
            "CREDENTIAL_KEY_PATH": "/some/dummy/path/test",
            "DDB_TABLE_NAME": Object {
              "Ref": "IngestionFeedProducerConstructLambdaDDBDynamoTable52EB3FCC",
            },
            "QUERY_PARAM": "Health",
            "QUERY_RESULT_TYPE": "mixed",
            "SOLUTION_NAME": "test-solution",
            "STACK_NAME": Object {
              "Ref": "AWS::StackName",
            },
            "STREAM_NAME": Object {
              "Ref": "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
            },
            "SUPPORTED_LANG": "de,en,es,it,pt,fr,ja,ko,hi,ar,zh-cn,zh-tw",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IngestionFeedProducerConstructLambdaDDBLambdaFunctionServiceRole17CBC38F",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "IngestionFeedProducerConstructLambdaDDBLambdaFunctionServiceRole17CBC38F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IngestionFeedProducerConstructLambdaDDBLambdaFunctionServiceRoleDefaultPolicy1206E2B8": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IngestionFeedProducerConstructLambdaDDBDynamoTable52EB3FCC",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/some/dummy/path/test",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IngestionFeedProducerConstructLambdaDDBLambdaFunctionServiceRoleDefaultPolicy1206E2B8",
        "Roles": Array [
          Object {
            "Ref": "IngestionFeedProducerConstructLambdaDDBLambdaFunctionServiceRole17CBC38F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IngestionFeedProducerConstructPollFrequency5D26B899": Object {
      "Properties": Object {
        "ScheduleExpression": "(0/2 * * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "IngestionFeedProducerConstructLambdaDDBLambdaFunctionADC081FB",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "IngestionFeedProducerConstructPollFrequencyAllowEventRuleIngestionFeedProducerConstructPollFrequencyA0B6F1DBC0E0A1BC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "IngestionFeedProducerConstructLambdaDDBLambdaFunctionADC081FB",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "IngestionFeedProducerConstructPollFrequency5D26B899",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;
