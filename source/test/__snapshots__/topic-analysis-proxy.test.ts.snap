// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test Text Analysis Fireshose Stream Creation 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters20faa1ca015cd2d173bb96d86639e4989206a738b13ee0f8f76b40742d67868dArtifactHash4664B1A4": Object {
      "Description": "Artifact hash for asset \\"20faa1ca015cd2d173bb96d86639e4989206a738b13ee0f8f76b40742d67868d\\"",
      "Type": "String",
    },
    "AssetParameters20faa1ca015cd2d173bb96d86639e4989206a738b13ee0f8f76b40742d67868dS3BucketC5ADC100": Object {
      "Description": "S3 bucket for asset \\"20faa1ca015cd2d173bb96d86639e4989206a738b13ee0f8f76b40742d67868d\\"",
      "Type": "String",
    },
    "AssetParameters20faa1ca015cd2d173bb96d86639e4989206a738b13ee0f8f76b40742d67868dS3VersionKeyA9919E3E": Object {
      "Description": "S3 key for asset version \\"20faa1ca015cd2d173bb96d86639e4989206a738b13ee0f8f76b40742d67868d\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "MappingsFirehosePolicyF3B1EED5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:",
                    Object {
                      "Ref": "MappingsfirehoseloggroupCF9E1FCA",
                    },
                    ":log-stream:",
                    Object {
                      "Ref": "Mappingsfirehoseloggroupfirehoselogstream61B84C13",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MappingsFirehosePolicyF3B1EED5",
        "Roles": Array [
          Object {
            "Ref": "MappingsFirehoseRoleC66C52FA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MappingsFirehoseRoleC66C52FA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "MappingsFirehoseRoleDefaultPolicy997DCB56": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "mappingsbucket4AF7BD5E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "mappingsbucket4AF7BD5E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MappingsFirehoseRoleDefaultPolicy997DCB56",
        "Roles": Array [
          Object {
            "Ref": "MappingsFirehoseRoleC66C52FA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MappingsKinesisFirehose86BFD1FA": Object {
      "Properties": Object {
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "mappingsbucket4AF7BD5E",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 600,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "MappingsfirehoseloggroupCF9E1FCA",
            },
            "LogStreamName": Object {
              "Ref": "Mappingsfirehoseloggroupfirehoselogstream61B84C13",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "ErrorOutputPrefix": "/mappingserror/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "/mappingscreated_at=!{timestamp:yyyy-MM-dd}/",
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "MappingsFirehoseRoleC66C52FA",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "MappingsfirehoseloggroupCF9E1FCA": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Mappingsfirehoseloggroupfirehoselogstream61B84C13": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "MappingsfirehoseloggroupCF9E1FCA",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "TestTAProxyLambdaFunction646B9726": Object {
      "DependsOn": Array [
        "TestTAProxyLambdaFunctionServiceRoleDefaultPolicyFC7C1A09",
        "TestTAProxyLambdaFunctionServiceRole1AE0D1E2",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters20faa1ca015cd2d173bb96d86639e4989206a738b13ee0f8f76b40742d67868dS3BucketC5ADC100",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters20faa1ca015cd2d173bb96d86639e4989206a738b13ee0f8f76b40742d67868dS3VersionKeyA9919E3E",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters20faa1ca015cd2d173bb96d86639e4989206a738b13ee0f8f76b40742d67868dS3VersionKeyA9919E3E",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "TOPICS_FIREHOSE": Object {
              "Ref": "TopicKinesisFirehoseCA492B95",
            },
            "TOPICS_NS": "com.analyze.inference.mapping",
            "TOPIC_MAPPINGS_FIREHOSE": Object {
              "Ref": "MappingsKinesisFirehose86BFD1FA",
            },
            "TOPIC_MAPPINGS_NS": "com.analyze.inferece.topic",
          },
        },
        "Handler": "lambda_function.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "TestTAProxyLambdaFunctionServiceRole1AE0D1E2",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "Timeout": 600,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestTAProxyLambdaFunctionServiceRole1AE0D1E2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestTAProxyLambdaFunctionServiceRoleDefaultPolicyFC7C1A09": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "firehose:PutRecord",
                "firehose:PutRecordBatch",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":firehose:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":deliverystream/",
                      Object {
                        "Ref": "TopicKinesisFirehoseCA492B95",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":firehose:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":deliverystream/",
                      Object {
                        "Ref": "MappingsKinesisFirehose86BFD1FA",
                      },
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestTAProxyLambdaFunctionServiceRoleDefaultPolicyFC7C1A09",
        "Roles": Array [
          Object {
            "Ref": "TestTAProxyLambdaFunctionServiceRole1AE0D1E2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TopicFirehosePolicyC7A4CC0A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:",
                    Object {
                      "Ref": "Topicfirehoseloggroup89670CE0",
                    },
                    ":log-stream:",
                    Object {
                      "Ref": "Topicfirehoseloggroupfirehoselogstream6A1DEF25",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TopicFirehosePolicyC7A4CC0A",
        "Roles": Array [
          Object {
            "Ref": "TopicFirehoseRoleCE52DEAF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TopicFirehoseRoleCE52DEAF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TopicFirehoseRoleDefaultPolicyD8DD6E87": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "topics8661C816",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "topics8661C816",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TopicFirehoseRoleDefaultPolicyD8DD6E87",
        "Roles": Array [
          Object {
            "Ref": "TopicFirehoseRoleCE52DEAF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TopicKinesisFirehoseCA492B95": Object {
      "Properties": Object {
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "topics8661C816",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 600,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "Topicfirehoseloggroup89670CE0",
            },
            "LogStreamName": Object {
              "Ref": "Topicfirehoseloggroupfirehoselogstream6A1DEF25",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "ErrorOutputPrefix": "/topicerror/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "/topiccreated_at=!{timestamp:yyyy-MM-dd}/",
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "TopicFirehoseRoleCE52DEAF",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "Topicfirehoseloggroup89670CE0": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Topicfirehoseloggroupfirehoselogstream6A1DEF25": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "Topicfirehoseloggroup89670CE0",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "mappingsbucket4AF7BD5E": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "topics8661C816": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;
